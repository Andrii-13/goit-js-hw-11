{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,8EAOAC,EAAAC,KAAKC,OAAOC,iBAAiB,U,SAeAC,G,OAAdC,EAAaC,MAAAC,KAAAC,U,IAb5B,IASIC,EACAC,EAVAC,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,aAAc,CAC9CC,aAAc,MAOVC,EAAW,IAAIC,sBAwErB,SAAyBC,GACrBA,EAAQC,S,EAAQN,EAAAd,EAAA,CAAAc,EAAAO,GAAAC,MAAA,SAAAC,EAAMC,G,IAQhBC,EAEIC,EAEJC,E,sEAPNH,EAAMI,eAAc,C,uBACtBC,MAAO,E,mBAEkB,EAAAC,EAAAC,UAASpB,EA9EZ,GA8E2CkB,M,OAAzDJ,EAAQO,EAAAC,KAEZP,EACED,EADFS,KAAQR,KAEJC,EAAUD,EAAKS,KACnB,SAAAC,G,IACEC,EAAYD,EAAZC,aACAC,EAAaF,EAAbE,cACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MACAC,EAAKL,EAALK,MACAC,EAAQN,EAARM,SACAC,EAASP,EAATO,U,OAEA,EAAAC,EAAAC,cACER,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,E,IAEJG,KAAK,IACP5C,EAAAC,KAAK4C,UAAUC,mBAAmB,YAAarB,GAC/Cd,EAASoC,UAELxB,EAASyB,OAAOC,OAAOtB,MACvBJ,EAASS,KAAKkB,UAAY3B,EAASyB,OAAOC,OAAOE,WACnDpC,EAASqC,UAAUpD,EAAAC,KAAKoD,OACxBzC,EAAA0C,GAASC,OAAOC,KACd,+D,kDAIJxD,EAAAC,KAAKwD,YAAYC,UAAUC,IAAI,mBAC/B/C,EAAA0C,GAASC,OAAOC,KACd,8D,mEA7CoBlC,G,kCAAP,I,IA7EN,CACTsC,WAAY,U,SAQDvD,I,OAAAA,EAAfO,EAAAd,EAAA,CAAAc,EAAAO,GAAAC,MAAA,SAAAC,EAA6BjB,G,IAYnBmB,EAWIC,EAEJC,E,qEAxBRoC,OAAOC,SAAS,EAAG,GACnB1D,EAAE2D,iBAGiB,MAFnBrD,EAAaN,EAAE4D,OAAOC,YAAYC,QAEa,KAAtBxD,EAAWyD,OAAa,C,sBAC/CnE,EAAAC,KAAK4C,UAAUuB,UAAY,GAC3BxD,EAAA0C,GAASC,OAAOC,KAAK,yC,qDAKE,EAAA5B,EAAAC,UAASnB,EAdZ,I,WAec,KAD5Ba,EAAQO,EAAAC,MACDC,KAAKR,KAAK6C,OAAY,C,uBACjCrE,EAAAC,KAAK4C,UAAUuB,UAAY,GAE3BxD,EAAA0C,GAASC,OAAOC,KACd,4E,2BAMFhC,EACED,EADFS,KAAQR,KAEJC,EAAUD,EAAKS,KACnB,SAAAC,G,IACEC,EAAYD,EAAZC,aACAC,EAAaF,EAAbE,cACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MACAC,EAAKL,EAALK,MACAC,EAAQN,EAARM,SACAC,EAASP,EAATO,U,OAEA,EAAAC,EAAAC,cACER,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,E,IAEJG,KAAK,IACP5C,EAAAC,KAAK4C,UAAUuB,UAAY3C,EAC3BE,KAAO,EACPhB,EAASoC,UACTnC,EAAA0C,GAASC,OAAOe,QACd,oBAA4CC,OAAxBhD,EAASS,KAAKkB,UAAU,aAE1C3B,EAASS,KAAKkB,WArDE,IAsDhBnC,EAASyD,QAAQxE,EAAAC,KAAKoD,OAExB5C,EAAaC,E,kDAEfE,EAAA0C,GAASC,OAAOkB,QAAQ,oC,2DAxDAnE,MAAAC,KAAAC,U","sources":["src/js/app-scroll.js"],"sourcesContent":["import { getFetch } from './img-api';\nimport { createMarkup } from './markup';\nimport { refs } from './refs';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nrefs.formEl.addEventListener('submit', handlerSubmit);\n\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captionDelay: 250,\n});\n\nlet option = {\n    rootMargin: '300px',\n  };\n  \nconst observer = new IntersectionObserver(handlerLoadMore, option);\nlet queryValue;\nlet inputValue;\nlet totalNumberOfPges = 20;\n\nasync function handlerSubmit(e) {\n  window.scrollTo(0, 0);\n  e.preventDefault();\n  inputValue = e.target.searchQuery.value;\n\n  if (inputValue === '' || inputValue.trim() === '') {\n    refs.galleryEl.innerHTML = '';\n    Notiflix.Notify.info('Your query is empty. Please try again');\n    return;\n  }\n\n  try {\n    const response = await getFetch(inputValue, totalNumberOfPges);\n    if (response.data.hits.length === 0) {\n      refs.galleryEl.innerHTML = '';\n\n      Notiflix.Notify.info(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    }\n\n    const {\n      data: { hits },\n    } = response;\n    const gallery = hits.map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        createMarkup(\n          webformatURL,\n          largeImageURL,\n          tags,\n          likes,\n          views,\n          comments,\n          downloads\n        )\n    ).join('');\n    refs.galleryEl.innerHTML = gallery;\n    page = 1;\n    lightbox.refresh();\n    Notiflix.Notify.success(\n      `Hooray! We found ${response.data.totalHits} images.`\n    );\n    if (response.data.totalHits >= totalNumberOfPges) {\n        observer.observe(refs.guard);\n      }\n      queryValue = inputValue;\n    } catch (error) {\n    Notiflix.Notify.failure('ERROR!!! Something went wrong!!!');\n  }\n\n \n  \n  \n  // console.log(refs.guard);\n  \n \n}\n\nfunction handlerLoadMore(entries){\n    entries.forEach(async entry=>{\n    //   console.log(entry);\n    //   console.log(page);\n    //   console.log(totalNumberOfPges);\n    //   console.log(queryValue);\nif (entry.isIntersecting){\n  page +=1\n  try {\n    const response = await getFetch(queryValue, totalNumberOfPges, page);\n    const {\n      data: { hits },\n    } = response;\n    const gallery = hits.map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        createMarkup(\n          webformatURL,\n          largeImageURL,\n          tags,\n          likes,\n          views,\n          comments,\n          downloads\n        )\n    ).join('');\n    refs.galleryEl.insertAdjacentHTML('beforeend', gallery);\n    lightbox.refresh();\n\n    if (response.config.params.page >=\n        response.data.totalHits / response.config.params.per_page) {\n      observer.unobserve(refs.guard);\n      Notiflix.Notify.info(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n    }\n  } catch (error) {\n    refs.btnLoadMore.classList.add('visually-hidden');\n    Notiflix.Notify.info(\n      \"We're sorry, but you've reached the end of search results.\"\n    );\n  }\n}\n    });\n}"],"names":["$bpxeT","parcelRequire","$4Nugj","refs","formEl","addEventListener","e","$4895d12663eb3f19$var$_handlerSubmit","apply","this","arguments","$4895d12663eb3f19$var$queryValue","$4895d12663eb3f19$var$inputValue","$4895d12663eb3f19$var$lightbox","$parcel$interopDefault","$5IjG7","captionDelay","$4895d12663eb3f19$var$observer","IntersectionObserver","entries","forEach","$2TvXO","mark","_callee","entry","response","hits","gallery","isIntersecting","page","$dOjMq","getFetch","_ctx","sent","data","map","param","webformatURL","largeImageURL","tags","likes","views","comments","downloads","$1KhuP","createMarkup","join","galleryEl","insertAdjacentHTML","refresh","config","params","totalHits","per_page","unobserve","guard","$6JpON","Notify","info","btnLoadMore","classList","add","rootMargin","window","scrollTo","preventDefault","target","searchQuery","value","trim","innerHTML","length","success","concat","observe","failure"],"version":3,"file":"task11-2.4b6900b4.js.map"}