{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,oDAOAC,EAAAC,KAAKC,OAAOC,iBAAiB,UAgB7BC,eAA6BC,GAK3B,GAJAC,OAAOC,SAAS,EAAG,GACnBF,EAAEG,iBACFC,EAAaJ,EAAEK,OAAOC,YAAYC,MAEf,KAAfH,GAA2C,KAAtBA,EAAWI,OAGlC,OAFAb,EAAAC,KAAKa,UAAUC,UAAY,QAC3BC,EAAAC,GAASC,OAAOC,KAAK,yCAIvB,IACE,MAAMC,QAAiB,EAAAtB,EAAAuB,UAASZ,EAfZ,IAgBpB,GAAkC,IAA9BW,EAASE,KAAKC,KAAKC,OAMrB,OALAxB,EAAAC,KAAKa,UAAUC,UAAY,QAE3BC,EAAAC,GAASC,OAAOC,KACd,4EAKJ,MACEG,MAAMC,KAAEA,IACNH,EAEJpB,EAAAC,KAAKa,UAAUC,WAAY,EAAAU,EAAAC,cAAaH,GACxCI,EAAO,EACPC,EAASC,UACTb,EAAAC,GAASC,OAAOY,QACd,oBAAoBV,EAASE,KAAKS,qBAEhCX,EAASE,KAAKS,WAnCE,IAoChBC,EAASC,QAAQjC,EAAAC,KAAKiC,OAExBC,EAAa1B,C,CACb,MAAO2B,GACLC,QAAQC,IAAIF,GAChBpB,EAAAC,GAASC,OAAOqB,QAAQ,mC,KApD5B,IAAIX,EAAW,IAAIZ,EAAAwB,GAAJ,CAAmB,aAAc,CAC9CC,aAAc,MAOhB,MAAMT,EAAW,IAAIU,sBAuDrB,SAAyBC,GACrBA,EAAQC,SAAQxC,MAAMyC,IAK1B,GAAIA,EAAMC,eAAe,CACvBnB,GAAO,EACP,IACE,MAAMP,QAAiB,EAAAtB,EAAAuB,UAASc,EA7DZ,GA6D2CR,IAE7DL,MAAMC,KAAEA,IACNH,EAEJpB,EAAAC,KAAKa,UAAUiC,mBAAmB,aAAa,EAAAtB,EAAAC,cAAaH,IAC5DK,EAASC,UAELT,EAAS4B,OAAOC,OAAOC,MACvB9B,EAASE,KAAKS,UAAYX,EAAS4B,OAAOC,OAAOE,WACnDnB,EAASoB,UAAUpD,EAAAC,KAAKiC,OACxBlB,EAAAC,GAASC,OAAOC,KACd,8D,CAGJ,MAAOiB,GACPpC,EAAAC,KAAKoD,YAAYC,UAAUC,IAAI,mBAC/BvC,EAAAC,GAASC,OAAOC,KACd,6D,QAtFO,CACTqC,WAAY,UAIhB,IAAIrB,EACA1B,EAEAkB","sources":["src/js/app-scroll.js"],"sourcesContent":["import { getFetch } from './img-api';\nimport { createMarkup } from './markup';\nimport { refs } from './refs';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nrefs.formEl.addEventListener('submit', handlerSubmit);\n\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captionDelay: 250,\n});\n\nlet option = {\n    rootMargin: '300px',\n  };\n  \nconst observer = new IntersectionObserver(handlerLoadMore, option);\nlet queryValue;\nlet inputValue;\nlet totalNumberOfPges = 20;\nlet page;\n\nasync function handlerSubmit(e) {\n  window.scrollTo(0, 0);\n  e.preventDefault();\n  inputValue = e.target.searchQuery.value;\n\n  if (inputValue === '' || inputValue.trim() === '') {\n    refs.galleryEl.innerHTML = '';\n    Notiflix.Notify.info('Your query is empty. Please try again');\n    return;\n  }\n\n  try {\n    const response = await getFetch(inputValue, totalNumberOfPges);\n    if (response.data.hits.length === 0) {\n      refs.galleryEl.innerHTML = '';\n\n      Notiflix.Notify.info(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    }\n\n    const {\n      data: { hits },\n    } = response;\n    \n    refs.galleryEl.innerHTML = createMarkup(hits);\n    page = 1;\n    lightbox.refresh();\n    Notiflix.Notify.success(\n      `Hooray! We found ${response.data.totalHits} images.`\n    );\n    if (response.data.totalHits >= totalNumberOfPges) {\n        observer.observe(refs.guard);\n      }\n      queryValue = inputValue;\n    } catch (error) {\n        console.log(error);\n    Notiflix.Notify.failure('ERROR!!! Something went wrong!!!');\n  }\n\n \n  \n  \n  // console.log(refs.guard);\n  \n \n}\n\nfunction handlerLoadMore(entries){\n    entries.forEach(async entry=>{\n    //   console.log(entry);\n    //   console.log(page);\n    //   console.log(totalNumberOfPges);\n    //   console.log(queryValue);\nif (entry.isIntersecting){\n  page +=1\n  try {\n    const response = await getFetch(queryValue, totalNumberOfPges, page);\n    const {\n      data: { hits },\n    } = response;\n   \n    refs.galleryEl.insertAdjacentHTML('beforeend', createMarkup(hits));\n    lightbox.refresh();\n\n    if (response.config.params.page >=\n        response.data.totalHits / response.config.params.per_page) {\n      observer.unobserve(refs.guard);\n      Notiflix.Notify.info(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n    }\n  } catch (error) {\n    refs.btnLoadMore.classList.add('visually-hidden');\n    Notiflix.Notify.info(\n      \"We're sorry, but you've reached the end of search results.\"\n    );\n  }\n}\n    });\n}"],"names":["$1JxcI","parcelRequire","$krGWQ","refs","formEl","addEventListener","async","e","window","scrollTo","preventDefault","$1636da505436bcd4$var$inputValue","target","searchQuery","value","trim","galleryEl","innerHTML","$parcel$interopDefault","$7Y9D8","Notify","info","response","getFetch","data","hits","length","$3huUq","createMarkup","$1636da505436bcd4$var$page","$1636da505436bcd4$var$lightbox","refresh","success","totalHits","$1636da505436bcd4$var$observer","observe","guard","$1636da505436bcd4$var$queryValue","error","console","log","failure","$fZKcF","captionDelay","IntersectionObserver","entries","forEach","entry","isIntersecting","insertAdjacentHTML","config","params","page","per_page","unobserve","btnLoadMore","classList","add","rootMargin"],"version":3,"file":"task11-2.5f8c826f.js.map"}