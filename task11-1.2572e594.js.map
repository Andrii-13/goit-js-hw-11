{"mappings":"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","sources":["src/js/app-btn.js"],"sourcesContent":["import { getFetch } from './img-api';\nimport { createMarkup } from './markup';\nimport { refs } from './refs';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nrefs.formEl.addEventListener('submit', handlerSubmit);\n\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captionDelay: 250,\n});\n\nlet queryValue;\nlet inputValue;\nlet totalNumberOfPges = 40;\nlet page;\n\nasync function handlerSubmit(e) {\n  window.scrollTo(0, 0);\n  e.preventDefault();\n  inputValue = e.target.searchQuery.value;\n\n  if (inputValue === '' || inputValue.trim() === '') {\n    refs.galleryEl.innerHTML = '';\n    Notiflix.Notify.info('Your query is empty. Please try again');\n    return;\n  }\n\n  try {\n    const response = await getFetch(inputValue, totalNumberOfPges);\n    if (response.data.hits.length === 0) {\n      refs.galleryEl.innerHTML = '';\n      // lightScroll();\n      refs.btnLoadMore.classList.add('visually-hidden');\n      Notiflix.Notify.info(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    }\n\n    const {\n      data: { hits },\n    } = response;\n    const gallery = hits.map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        createMarkup(\n          webformatURL,\n          largeImageURL,\n          tags,\n          likes,\n          views,\n          comments,\n          downloads\n        )\n    ).join('');\n    refs.galleryEl.innerHTML = gallery;\n    page = 1;\n    lightbox.refresh();\n    Notiflix.Notify.success(\n      `Hooray! We found ${response.data.totalHits} images.`\n    );\n    // lightScroll();\n    refs.btnLoadMore.classList.remove('visually-hidden');\n    if (response.data.totalHits <= totalNumberOfPges) {\n      refs.btnLoadMore.classList.add('visually-hidden');\n    }\n    queryValue = inputValue;\n  } catch (error) {\n    Notiflix.Notify.failure('ERROR!!! Something went wrong!!!');\n  }\n}\n\nrefs.btnLoadMore.addEventListener('click', handlerLoadMore);\n\nasync function handlerLoadMore(e) {\n  page += 1;\n\n  try {\n    const response = await getFetch(queryValue, totalNumberOfPges, page);\n    const {\n      data: { hits },\n    } = response;\n    const gallery = hits.map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        createMarkup(\n          webformatURL,\n          largeImageURL,\n          tags,\n          likes,\n          views,\n          comments,\n          downloads\n        )\n    ).join('');\n    refs.galleryEl.insertAdjacentHTML('beforeend', gallery);\n    lightbox.refresh();\n\n    if (\n      response.config.params.page >=\n      response.data.totalHits / response.config.params.per_page\n    ) {\n      refs.btnLoadMore.classList.add('visually-hidden');\n      Notiflix.Notify.info(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n    }\n  } catch (error) {\n    refs.btnLoadMore.classList.add('visually-hidden');\n    Notiflix.Notify.info(\n      \"We're sorry, but you've reached the end of search results.\"\n    );\n  }\n}\n\n\n// function lightScroll() {\n//   const { height: cardHeight } = document\n//     .querySelector('.gallery')\n//     .firstElementChild.getBoundingClientRect();\n\n//   window.scrollBy({\n//     top: cardHeight * 5,\n//     behavior: 'smooth',\n//   });\n// }"],"names":["$bpxeT","parcelRequire","$4Nugj","refs","formEl","addEventListener","e","$a5fc04c94e82e3f2$var$_handlerSubmit","apply","this","arguments","$a5fc04c94e82e3f2$var$queryValue","$a5fc04c94e82e3f2$var$inputValue","$a5fc04c94e82e3f2$var$page","$a5fc04c94e82e3f2$var$lightbox","$parcel$interopDefault","$5IjG7","captionDelay","$a5fc04c94e82e3f2$var$totalNumberOfPges","$2TvXO","mark","_callee","response","hits","gallery","window","scrollTo","preventDefault","target","searchQuery","value","trim","galleryEl","innerHTML","$6JpON","Notify","info","$dOjMq","getFetch","_ctx","sent","data","length","btnLoadMore","classList","add","map","param","webformatURL","largeImageURL","tags","likes","views","comments","downloads","$1KhuP","createMarkup","join","refresh","success","concat","totalHits","remove","failure","$a5fc04c94e82e3f2$var$_handlerLoadMore","insertAdjacentHTML","config","params","page","per_page"],"version":3,"file":"task11-1.2572e594.js.map"}